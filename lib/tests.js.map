{
  "version": 3,
  "file": "tests.js",
  "sourceRoot": "..",
  "sources": [
    "src/tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'NCR-UNICODE-CACHE-WRITER/tests'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n{ step }                  = require 'coffeenode-suspend'\n#...........................................................................................................\ntest                      = require 'guy-test'\n### short for 'cache writer': ###\nCW                        = require './main'\nISL                       = require 'interskiplist'\n\n\n#===========================================================================================================\n# HELPERS\n#-----------------------------------------------------------------------------------------------------------\n@_prune = ->\n  for name, value of @\n    continue if name.startsWith '_'\n    delete @[ name ] unless name in include\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_main = ( handler = null ) ->\n  test @, 'timeout': 30000\n\n#-----------------------------------------------------------------------------------------------------------\nhex = ( n ) -> '0x' + n.toString 16\ns   = ( x ) -> JSON.stringify x\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@[ \"demo\" ] = ( T, done ) ->\n  self = @\n  step ( resume ) ->\n    yield CW.main resume\n    help 'ok'\n    done()\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"superficial API test\" ] = ( T, done ) ->\n  self = @\n  step ( resume ) ->\n    S         = yield CW.read           resume\n    intervals = yield CW.read_intervals resume\n    #.......................................................................................................\n    # debug '3984', Object.keys S\n    T.eq ( Object.keys S ), [ 'intervals', 'interval_by_names', 'interval_by_rsgs', ]\n    T.eq S.intervals, intervals\n    T.ok S.intervals isnt intervals\n    #.......................................................................................................\n    isl_1     = yield CW.read_isl       resume\n    isl_2     = ISL.new()\n    ISL.add isl_2, interval for interval in intervals\n    delete isl_1[ '%self' ]\n    delete isl_2[ '%self' ]\n    T.eq isl_1, isl_2\n    help 'ok'\n    #.......................................................................................................\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"test Unicode ISL against select codepoints\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"a\",{\"tag\":[\"assigned\"],\"plane\":\"Basic Multilingual Plane (BMP)\",\"area\":\"ASCII & Latin-1 Compatibility Area\",\"block\":\"Basic Latin\",\"rsg\":\"u-latn\"}]\n    [\"ä\",{\"tag\":[\"assigned\"],\"plane\":\"Basic Multilingual Plane (BMP)\",\"area\":\"ASCII & Latin-1 Compatibility Area\",\"block\":\"Latin-1 Supplement\",\"rsg\":\"u-latn-1\"}]\n    [\"ɐ\",{\"tag\":[\"assigned\"],\"plane\":\"Basic Multilingual Plane (BMP)\",\"area\":\"General Scripts Area\",\"block\":\"IPA Extensions\",\"rsg\":\"u-ipa-x\"}]\n    [\"ա\",{\"tag\":[\"assigned\"],\"plane\":\"Basic Multilingual Plane (BMP)\",\"area\":\"General Scripts Area\",\"block\":\"Armenian\"}]\n    [\"三\",{\"tag\":[\"assigned\",\"cjk\",\"ideograph\"],\"plane\":\"Basic Multilingual Plane (BMP)\",\"area\":\"CJKV Unified Ideographs Area\",\"block\":\"CJK Unified Ideographs\",\"rsg\":\"u-cjk\"}]\n    [\"ゆ\",{\"tag\":[\"assigned\",\"cjk\",\"japanese\",\"kana\",\"hiragana\"],\"plane\":\"Basic Multilingual Plane (BMP)\",\"area\":\"CJK Miscellaneous Area\",\"block\":\"Hiragana\",\"rsg\":\"u-cjk-hira\"}]\n    [\"㈪\",{\"tag\":[\"assigned\",\"cjk\"],\"plane\":\"Basic Multilingual Plane (BMP)\",\"area\":\"CJK Miscellaneous Area\",\"block\":\"Enclosed CJK Letters and Months\",\"rsg\":\"u-cjk-enclett\"}]\n    [\"《\",{\"tag\":[\"assigned\",\"cjk\",\"punctuation\"],\"plane\":\"Basic Multilingual Plane (BMP)\",\"area\":\"CJK Miscellaneous Area\",\"block\":\"CJK Symbols and Punctuation\",\"rsg\":\"u-cjk-sym\"}]\n    [\"》\",{\"tag\":[\"assigned\",\"cjk\",\"punctuation\"],\"plane\":\"Basic Multilingual Plane (BMP)\",\"area\":\"CJK Miscellaneous Area\",\"block\":\"CJK Symbols and Punctuation\",\"rsg\":\"u-cjk-sym\"}]\n    [\"𫠠\",{\"tag\":[\"assigned\",\"cjk\",\"ideograph\"],\"plane\":\"Supplementary Ideographic Plane (SIP)\",\"block\":\"CJK Unified Ideographs Extension E\",\"rsg\":\"u-cjk-xe\"}]\n    [\"﹄\",{\"tag\":[\"assigned\",\"cjk\",\"vertical\"],\"plane\":\"Basic Multilingual Plane (BMP)\",\"area\":\"Compatibility and Specials Area\",\"block\":\"CJK Compatibility Forms\",\"rsg\":\"u-cjk-cmpf\"}]\n    [\"﹅\",{\"tag\":[\"assigned\",\"cjk\"],\"plane\":\"Basic Multilingual Plane (BMP)\",\"area\":\"Compatibility and Specials Area\",\"block\":\"CJK Compatibility Forms\",\"rsg\":\"u-cjk-cmpf\"}]\n    [\"𝍖\",{\"tag\":[\"assigned\",\"cjk\",\"yijing\",\"taixuanjing\",\"tetragram\"],\"plane\":\"Supplementary Multilingual Plane (SMP)\",\"area\":\"Symbols Area\",\"block\":\"Tai Xuan Jing Symbols\",\"rsg\":\"u-txj-sym\"}]\n    [\"𝍗\",{\"tag\":[\"unassigned\",\"cjk\",\"yijing\",\"taixuanjing\",\"tetragram\"],\"plane\":\"Supplementary Multilingual Plane (SMP)\",\"area\":\"Symbols Area\",\"block\":\"Tai Xuan Jing Symbols\",\"rsg\":\"u-txj-sym\"}]\n    [\"𞹛\",{\"tag\":[\"assigned\"],\"plane\":\"Supplementary Multilingual Plane (SMP)\",\"area\":\"General Scripts Area (RTL)\",\"block\":\"Arabic Mathematical Alphabetic Symbols\"}]\n    [\"𞹜\",{\"tag\":[\"unassigned\"],\"plane\":\"Supplementary Multilingual Plane (SMP)\",\"area\":\"General Scripts Area (RTL)\",\"block\":\"Arabic Mathematical Alphabetic Symbols\"}]\n    [\"𞹝\",{\"tag\":[\"assigned\"],\"plane\":\"Supplementary Multilingual Plane (SMP)\",\"area\":\"General Scripts Area (RTL)\",\"block\":\"Arabic Mathematical Alphabetic Symbols\"}]\n    [\"𞹞\",{\"tag\":[\"unassigned\"],\"plane\":\"Supplementary Multilingual Plane (SMP)\",\"area\":\"General Scripts Area (RTL)\",\"block\":\"Arabic Mathematical Alphabetic Symbols\"}]\n    [\"𞹟\",{\"tag\":[\"assigned\"],\"plane\":\"Supplementary Multilingual Plane (SMP)\",\"area\":\"General Scripts Area (RTL)\",\"block\":\"Arabic Mathematical Alphabetic Symbols\"}]\n    [\"𞹠\",{\"tag\":[\"unassigned\"],\"plane\":\"Supplementary Multilingual Plane (SMP)\",\"area\":\"General Scripts Area (RTL)\",\"block\":\"Arabic Mathematical Alphabetic Symbols\"}]\n    [\"𞹡\",{\"tag\":[\"assigned\"],\"plane\":\"Supplementary Multilingual Plane (SMP)\",\"area\":\"General Scripts Area (RTL)\",\"block\":\"Arabic Mathematical Alphabetic Symbols\"}]\n    ]\n  #.........................................................................................................\n  reducers =\n    name:     'skip'\n    type:     'skip'\n    comment:  'skip'\n  #.........................................................................................................\n  CW.read_isl ( error, isl ) =>\n    throw error if error?\n    # for [ probe, matcher, ] in probes_and_matchers\n    #   echo s [ probe, ISL.aggregate isl, probe, reducers ]\n    for [ probe, matcher, ] in probes_and_matchers\n      T.eq ( ISL.aggregate isl, probe, reducers ), matcher\n    done()\n  #.........................................................................................................\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  include = [\n    # \"demo\"\n    \"superficial API test\"\n    \"test Unicode ISL against select codepoints\"\n    ]\n  @_prune()\n  @_main()\n\n  # @[ \"(v3) match, intersect\" ]()\n\n\n"
  ]
}