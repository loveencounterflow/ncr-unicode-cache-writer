{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n############################################################################################################\n# njs_util                  = require 'util'\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'NCR-UNICODE-CACHE-WRITER'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n# #...........................................................................................................\n# D                         = require 'pipedreams'\n# { $, $async, }            = D\n# require 'pipedreams/lib/plugin-tsv'\n# # require 'pipedreams/lib/plugin-tabulate'\n#...........................................................................................................\n{ step }                  = require 'coffeenode-suspend'\n#...........................................................................................................\nISL                       = require 'interskiplist'\n@READER                   = require './reader'\n\n#-----------------------------------------------------------------------------------------------------------\n@read = ( handler ) ->\n  @READER.read ( error, S ) =>\n    return handler error if error?\n    handler null, S\n\n#-----------------------------------------------------------------------------------------------------------\n@read_intervals = ( handler ) ->\n  @read ( error, S ) =>\n    return handler error if error?\n    handler null, S.intervals\n\n#-----------------------------------------------------------------------------------------------------------\n@read_isl = ( handler ) ->\n  @read_intervals ( error, intervals ) =>\n    return handler error if error?\n    isl = ISL.new()\n    ISL.add isl, interval for interval in intervals\n    handler null, isl\n\n#===========================================================================================================\n# WRITE CACHES\n#-----------------------------------------------------------------------------------------------------------\n@write = ( S, handler = null ) ->\n  @read_intervals ( error, intervals ) =>\n    return handler error if error?\n    # json = JSON.stringify intervals, null, '  '\n    # echo json\n    echo '['\n    for idx in [ 0 ... intervals.length - 2 ] by +1\n      echo ( JSON.stringify intervals[ idx ] ) + ','\n    echo ( JSON.stringify intervals[ intervals.length - 1 ] )\n    echo ']'\n    handler() if handler?\n  #.........................................................................................................\n  return null\n\n  # write_to_file = no\n  # help \"#{S.intervals.length} intervals\"\n  # #.........................................................................................................\n  # if write_to_file\n  #   path = '/tmp/u-intervals.json'\n  #   FS.writeFile path, json, =>\n  #     help \"written to #{path}\"\n  #     handler()\n  # else\n\n\n############################################################################################################\nunless module.parent?\n  @write()\n\n\n\n\n"
  ]
}